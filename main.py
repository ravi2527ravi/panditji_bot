import os
import pandas as pd
from flask import Flask, request
from telegram import Update, InputFile
from telegram.ext import Application, CommandHandler, ContextTypes
from telegram.ext import MessageHandler, filters

# Environment variables
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
PORT = int(os.environ.get("PORT", 10000))
HOST = os.environ.get("HOST", "0.0.0.0")
WEBHOOK_PATH = f"/webhook/{BOT_TOKEN}"
WEBHOOK_URL = f"https://panditji-bot.onrender.com{WEBHOOK_PATH}"

# Load local NSE/BSE data from CSV file
try:
    stock_data = pd.read_csv("nse_bse_data.csv")
except:
    stock_data = pd.DataFrame()

# Telegram Bot Handlers
def setup_bot():
    app = Application.builder().token(BOT_TOKEN).build()

    async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
        await update.message.reply_text("ЁЯЩП рдЬрдп рд╢реНрд░реА рд░рд╛рдо! рдореИрдВ Panditji Bot рд╣реВрдВред рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ ЁЯХЙ")

    async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
        help_text = (
            "ЁЯза *Panditji Bot Commands*\n"
            "\n"
            "тЬЕ /start - рдмреЙрдЯ рд╢реБрд░реВ рдХрд░реЗрдВ\n"
            "тЬЕ /help - рд╕рднреА рдХрдорд╛рдВрдбреНрд╕ рдХреА рд▓рд┐рд╕реНрдЯ\n"
            "тЬЕ /news - рдЖрдЬ рдХреА рдорд╣рддреНрд╡рдкреВрд░реНрдг рдорд╛рд░реНрдХреЗрдЯ рдиреНрдпреВрдЬрд╝\n"
            "тЬЕ /trend <STOCK/INDEX> - рдорд╛рд░реНрдХреЗрдЯ рдЯреНрд░реЗрдВрдб рдмрддрд╛рдПрдВ (AI рдЖрдзрд╛рд░рд┐рдд)\n"
            "тЬЕ /fundamentals <STOCK> - рдХрдВрдкрдиреА рдХреЗ рдлрдВрдбрд╛рдореЗрдВрдЯрд▓реНрд╕\n"
            "тЬЕ /oi <STOCK> - рдСрдкреНрд╢рди рдЪреЗрди + рдкреАрд╕реАрдЖрд░\n"
            "тЬЕ /scan - рд╕реНрдХреНрд░реАрдирд╢реЙрдЯ рднреЗрдЬреЗрдВ, рдкреИрдЯрд░реНрди рдбрд┐рдЯреЗрдХреНрдЯ рдХрд░реЗрдВ\n"
            "тЬЕ /pcr <STOCK> - Put/Call Ratio\n"
            "тЬЕ /ratios <STOCK> - рд╕рднреА financial ratios\n"
            "тЬЕ /livemarket - рд▓рд╛рдЗрд╡ рдорд╛рд░реНрдХреЗрдЯ рд╣рд╛рд▓\n"
            "тЬЕ /details <STOCK> - рд╢реЗрдпрд░ рдХреА рдкреВрд░реА рдЬрд╛рдирдХрд╛рд░реА CSV рд╕реЗ\n"
        )
        await update.message.reply_text(help_text, parse_mode="Markdown")

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))

    return app

# Flask app
web_app = Flask(__name__)
bot_app = setup_bot()

@web_app.route('/')
def home():
    return "тЬЕ Panditji Bot is running with webhook!"

@web_app.post(WEBHOOK_PATH)
def webhook():
    if request.method == "POST":
        update = Update.de_json(request.get_json(force=True), bot_app.bot)
        bot_app.update_queue.put(update)
        return "", 200

if __name__ == '__main__':
    bot_app.bot.set_webhook(WEBHOOK_URL)
    web_app.run(host=HOST, port=PORT)

import os
import threading
from flask import Flask
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# ‡§ü‡•á‡§≤‡•Ä‡§ó‡•ç‡§∞‡§æ‡§Æ ‡§¨‡•â‡§ü ‡§ü‡•ã‡§ï‡§® ‡§ï‡•ã env ‡§∏‡•á ‡§≤‡•ã
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# Telegram Bot ‡§ï‡§æ function
def run_telegram_bot():
    try:
        app = ApplicationBuilder().token(BOT_TOKEN).build()

        # /start ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§ï‡§æ ‡§ú‡§µ‡§æ‡§¨
        async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
            await update.message.reply_text(
                "üôè ‡§ú‡§Ø ‡§∂‡•ç‡§∞‡•Ä ‡§∞‡§æ‡§Æ!\n‡§Æ‡•à‡§Ç Panditji Bot ‡§π‡•Ç‡§Å üìø\n‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à üó±\nMarket ka pura analysis yahan milega!"
            )

        # ‡§ï‡§Æ‡§æ‡§Ç‡§° handler ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
        app.add_handler(CommandHandler("start", start))

        print("ü§ñ Telegram bot started...")
        app.run_polling()

    except Exception as e:
        print(f"‚ùå Telegram bot error: {e}")

# Flask app (Render ‡§ï‡•ã port bind ‡§¶‡§ø‡§ñ‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è)
web_app = Flask(__name__)

@web_app.route('/')
def home():
    return "‚úÖ Panditji Bot Flask server is running on Render!"

# Start both Flask + Telegram Bot
if __name__ == '__main__':
    threading.Thread(target=run_telegram_bot).start()
    web_app.run(host='0.0.0.0', port=int(os.environ.get("PORT", 10000)))
